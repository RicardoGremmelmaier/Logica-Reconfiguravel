// megafunction wizard: %FIFO%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: scfifo 

// ============================================================
// File Name: fifo1024.v
// Megafunction Name(s):
// 			scfifo
//
// Simulation Library Files(s):
// 			altera_mf
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 13.0.1 Build 232 06/12/2013 SP 1 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2013 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//scfifo ADD_RAM_OUTPUT_REGISTER="OFF" ALMOST_EMPTY_VALUE=511 ALMOST_FULL_VALUE=767 DEVICE_FAMILY="Cyclone II" LPM_NUMWORDS=1024 LPM_SHOWAHEAD="OFF" LPM_WIDTH=16 LPM_WIDTHU=10 OVERFLOW_CHECKING="ON" UNDERFLOW_CHECKING="ON" USE_EAB="ON" aclr almost_empty almost_full clock data empty full q rdreq usedw wrreq INTENDED_DEVICE_FAMILY="Cyclone II"
//VERSION_BEGIN 13.0 cbx_altdpram 2013:06:12:18:03:43:SJ cbx_altsyncram 2013:06:12:18:03:43:SJ cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_fifo_common 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_counter 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_lpm_mux 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_scfifo 2013:06:12:18:03:43:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ cbx_stratixiii 2013:06:12:18:03:43:SJ cbx_stratixv 2013:06:12:18:03:43:SJ cbx_util_mgl 2013:06:12:18:03:43:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//a_dpfifo ADD_RAM_OUTPUT_REGISTER="OFF" ALLOW_RWCYCLE_WHEN_FULL="OFF" DEVICE_FAMILY="Cyclone II" LPM_NUMWORDS=1024 LPM_SHOWAHEAD="OFF" lpm_width=16 lpm_widthu=10 OVERFLOW_CHECKING="ON" UNDERFLOW_CHECKING="ON" aclr clock data empty full q rreq sclr usedw wreq INTENDED_DEVICE_FAMILY="Cyclone II"
//VERSION_BEGIN 13.0 cbx_altdpram 2013:06:12:18:03:43:SJ cbx_altsyncram 2013:06:12:18:03:43:SJ cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_fifo_common 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_counter 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_lpm_mux 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_scfifo 2013:06:12:18:03:43:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ cbx_stratixiii 2013:06:12:18:03:43:SJ cbx_stratixv 2013:06:12:18:03:43:SJ cbx_util_mgl 2013:06:12:18:03:43:SJ  VERSION_END


//a_fefifo ALLOW_RWCYCLE_WHEN_FULL="OFF" LPM_NUMWORDS=1024 lpm_widthad=10 OVERFLOW_CHECKING="ON" UNDERFLOW_CHECKING="ON" aclr clock empty full rreq sclr usedw_out wreq
//VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_fifo_common 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_counter 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


//lpm_counter DEVICE_FAMILY="Cyclone II" lpm_width=10 aclr clock cnt_en q sclr updown
//VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_counter 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END

//synthesis_resources = lut 10 reg 10 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fifo1024_cntr
	( 
	aclr,
	clock,
	cnt_en,
	q,
	sclr,
	updown) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clock;
	input   cnt_en;
	output   [9:0]  q;
	input   sclr;
	input   updown;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   cnt_en;
	tri0   sclr;
	tri1   updown;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]   wire_counter_comb_bita_0combout;
	wire  [0:0]   wire_counter_comb_bita_1combout;
	wire  [0:0]   wire_counter_comb_bita_2combout;
	wire  [0:0]   wire_counter_comb_bita_3combout;
	wire  [0:0]   wire_counter_comb_bita_4combout;
	wire  [0:0]   wire_counter_comb_bita_5combout;
	wire  [0:0]   wire_counter_comb_bita_6combout;
	wire  [0:0]   wire_counter_comb_bita_7combout;
	wire  [0:0]   wire_counter_comb_bita_8combout;
	wire  [0:0]   wire_counter_comb_bita_9combout;
	wire  [0:0]   wire_counter_comb_bita_0cout;
	wire  [0:0]   wire_counter_comb_bita_1cout;
	wire  [0:0]   wire_counter_comb_bita_2cout;
	wire  [0:0]   wire_counter_comb_bita_3cout;
	wire  [0:0]   wire_counter_comb_bita_4cout;
	wire  [0:0]   wire_counter_comb_bita_5cout;
	wire  [0:0]   wire_counter_comb_bita_6cout;
	wire  [0:0]   wire_counter_comb_bita_7cout;
	wire  [0:0]   wire_counter_comb_bita_8cout;
	wire  [9:0]   wire_counter_reg_bit1a_regout;
	wire  [9:0]   wire_counter_reg_bit1a_sdata;
	wire  aclr_actual;
	wire clk_en;
	wire [9:0]  data;
	wire  external_cin;
	wire  [9:0]  s_val;
	wire  [9:0]  safe_q;
	wire sload;
	wire sset;
	wire  updown_dir;

	cycloneii_lcell_comb   counter_comb_bita_0
	( 
	.cin(external_cin),
	.combout(wire_counter_comb_bita_0combout[0:0]),
	.cout(wire_counter_comb_bita_0cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[0:0]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_0.lut_mask = 16'h5A90,
		counter_comb_bita_0.sum_lutc_input = "cin",
		counter_comb_bita_0.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_1
	( 
	.cin(wire_counter_comb_bita_0cout[0:0]),
	.combout(wire_counter_comb_bita_1combout[0:0]),
	.cout(wire_counter_comb_bita_1cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[1:1]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_1.lut_mask = 16'h5A90,
		counter_comb_bita_1.sum_lutc_input = "cin",
		counter_comb_bita_1.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_2
	( 
	.cin(wire_counter_comb_bita_1cout[0:0]),
	.combout(wire_counter_comb_bita_2combout[0:0]),
	.cout(wire_counter_comb_bita_2cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[2:2]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_2.lut_mask = 16'h5A90,
		counter_comb_bita_2.sum_lutc_input = "cin",
		counter_comb_bita_2.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_3
	( 
	.cin(wire_counter_comb_bita_2cout[0:0]),
	.combout(wire_counter_comb_bita_3combout[0:0]),
	.cout(wire_counter_comb_bita_3cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[3:3]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_3.lut_mask = 16'h5A90,
		counter_comb_bita_3.sum_lutc_input = "cin",
		counter_comb_bita_3.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_4
	( 
	.cin(wire_counter_comb_bita_3cout[0:0]),
	.combout(wire_counter_comb_bita_4combout[0:0]),
	.cout(wire_counter_comb_bita_4cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[4:4]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_4.lut_mask = 16'h5A90,
		counter_comb_bita_4.sum_lutc_input = "cin",
		counter_comb_bita_4.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_5
	( 
	.cin(wire_counter_comb_bita_4cout[0:0]),
	.combout(wire_counter_comb_bita_5combout[0:0]),
	.cout(wire_counter_comb_bita_5cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[5:5]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_5.lut_mask = 16'h5A90,
		counter_comb_bita_5.sum_lutc_input = "cin",
		counter_comb_bita_5.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_6
	( 
	.cin(wire_counter_comb_bita_5cout[0:0]),
	.combout(wire_counter_comb_bita_6combout[0:0]),
	.cout(wire_counter_comb_bita_6cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[6:6]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_6.lut_mask = 16'h5A90,
		counter_comb_bita_6.sum_lutc_input = "cin",
		counter_comb_bita_6.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_7
	( 
	.cin(wire_counter_comb_bita_6cout[0:0]),
	.combout(wire_counter_comb_bita_7combout[0:0]),
	.cout(wire_counter_comb_bita_7cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[7:7]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_7.lut_mask = 16'h5A90,
		counter_comb_bita_7.sum_lutc_input = "cin",
		counter_comb_bita_7.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_8
	( 
	.cin(wire_counter_comb_bita_7cout[0:0]),
	.combout(wire_counter_comb_bita_8combout[0:0]),
	.cout(wire_counter_comb_bita_8cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[8:8]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_8.lut_mask = 16'h5A90,
		counter_comb_bita_8.sum_lutc_input = "cin",
		counter_comb_bita_8.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_9
	( 
	.cin(wire_counter_comb_bita_8cout[0:0]),
	.combout(wire_counter_comb_bita_9combout[0:0]),
	.cout(),
	.dataa(wire_counter_reg_bit1a_regout[9:9]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_9.lut_mask = 16'h5A90,
		counter_comb_bita_9.sum_lutc_input = "cin",
		counter_comb_bita_9.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_ff   counter_reg_bit1a_0
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_0combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[0:0]),
	.sdata(wire_counter_reg_bit1a_sdata[0:0]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_1
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_1combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[1:1]),
	.sdata(wire_counter_reg_bit1a_sdata[1:1]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_2
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_2combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[2:2]),
	.sdata(wire_counter_reg_bit1a_sdata[2:2]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_3
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_3combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[3:3]),
	.sdata(wire_counter_reg_bit1a_sdata[3:3]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_4
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_4combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[4:4]),
	.sdata(wire_counter_reg_bit1a_sdata[4:4]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_5
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_5combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[5:5]),
	.sdata(wire_counter_reg_bit1a_sdata[5:5]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_6
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_6combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[6:6]),
	.sdata(wire_counter_reg_bit1a_sdata[6:6]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_7
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_7combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[7:7]),
	.sdata(wire_counter_reg_bit1a_sdata[7:7]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_8
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_8combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[8:8]),
	.sdata(wire_counter_reg_bit1a_sdata[8:8]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_9
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_9combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[9:9]),
	.sdata(wire_counter_reg_bit1a_sdata[9:9]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	assign
		wire_counter_reg_bit1a_sdata = ({10{(~ sclr)}} & (({10{sset}} & s_val) | ({10{(~ sset)}} & data)));
	assign
		aclr_actual = aclr,
		clk_en = 1'b1,
		data = {10{1'b0}},
		external_cin = 1'b1,
		q = safe_q,
		s_val = {10{1'b1}},
		safe_q = wire_counter_reg_bit1a_regout,
		sload = 1'b0,
		sset = 1'b0,
		updown_dir = updown;
endmodule //fifo1024_cntr

//synthesis_resources = lut 10 reg 12 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fifo1024_a_fefifo
	( 
	aclr,
	clock,
	empty,
	full,
	rreq,
	sclr,
	usedw_out,
	wreq) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clock;
	output   empty;
	output   full;
	input   rreq;
	input   sclr;
	output   [9:0]  usedw_out;
	input   wreq;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri0   rreq;
	tri0   sclr;
	tri0   wreq;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	b_full;
	reg	b_non_empty;
	wire  [9:0]   wire_count_usedw_q;
	wire  [9:0]  equal_af1;
	wire  [9:0]  equal_one;
	wire  is_almost_empty0;
	wire  is_almost_empty1;
	wire  is_almost_empty2;
	wire  is_almost_empty3;
	wire  is_almost_empty4;
	wire  is_almost_empty5;
	wire  is_almost_empty6;
	wire  is_almost_empty7;
	wire  is_almost_empty8;
	wire  is_almost_empty9;
	wire  is_almost_full0;
	wire  is_almost_full1;
	wire  is_almost_full2;
	wire  is_almost_full3;
	wire  is_almost_full4;
	wire  is_almost_full5;
	wire  is_almost_full6;
	wire  is_almost_full7;
	wire  is_almost_full8;
	wire  is_almost_full9;
	wire  [9:0]  usedw;
	wire  valid_rreq;
	wire  valid_wreq;

	// synopsys translate_off
	initial
		b_full = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) b_full <= 1'b0;
		else  b_full <= ((b_full & (b_full ^ (sclr | rreq))) | (((~ b_full) & b_non_empty) & ((~ sclr) & ((is_almost_full9 & wreq) & (~ rreq)))));
	// synopsys translate_off
	initial
		b_non_empty = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) b_non_empty <= 1'b0;
		else  b_non_empty <= (((b_full & (b_full ^ sclr)) | (((~ b_non_empty) & wreq) & (~ sclr))) | (((~ b_full) & b_non_empty) & (((~ b_full) & b_non_empty) ^ (sclr | ((is_almost_empty9 & rreq) & (~ wreq))))));
	fifo1024_cntr   count_usedw
	( 
	.aclr(aclr),
	.clock(clock),
	.cnt_en((valid_wreq ^ valid_rreq)),
	.q(wire_count_usedw_q),
	.sclr(sclr),
	.updown(valid_wreq));
	assign
		empty = (~ b_non_empty),
		equal_af1 = {10{1'b0}},
		equal_one = {{9{1'b1}}, 1'b0},
		full = b_full,
		is_almost_empty0 = (usedw[0] ^ equal_one[0]),
		is_almost_empty1 = ((usedw[1] ^ equal_one[1]) & is_almost_empty0),
		is_almost_empty2 = ((usedw[2] ^ equal_one[2]) & is_almost_empty1),
		is_almost_empty3 = ((usedw[3] ^ equal_one[3]) & is_almost_empty2),
		is_almost_empty4 = ((usedw[4] ^ equal_one[4]) & is_almost_empty3),
		is_almost_empty5 = ((usedw[5] ^ equal_one[5]) & is_almost_empty4),
		is_almost_empty6 = ((usedw[6] ^ equal_one[6]) & is_almost_empty5),
		is_almost_empty7 = ((usedw[7] ^ equal_one[7]) & is_almost_empty6),
		is_almost_empty8 = ((usedw[8] ^ equal_one[8]) & is_almost_empty7),
		is_almost_empty9 = ((usedw[9] ^ equal_one[9]) & is_almost_empty8),
		is_almost_full0 = (usedw[0] ^ equal_af1[0]),
		is_almost_full1 = ((usedw[1] ^ equal_af1[1]) & is_almost_full0),
		is_almost_full2 = ((usedw[2] ^ equal_af1[2]) & is_almost_full1),
		is_almost_full3 = ((usedw[3] ^ equal_af1[3]) & is_almost_full2),
		is_almost_full4 = ((usedw[4] ^ equal_af1[4]) & is_almost_full3),
		is_almost_full5 = ((usedw[5] ^ equal_af1[5]) & is_almost_full4),
		is_almost_full6 = ((usedw[6] ^ equal_af1[6]) & is_almost_full5),
		is_almost_full7 = ((usedw[7] ^ equal_af1[7]) & is_almost_full6),
		is_almost_full8 = ((usedw[8] ^ equal_af1[8]) & is_almost_full7),
		is_almost_full9 = ((usedw[9] ^ equal_af1[9]) & is_almost_full8),
		usedw = wire_count_usedw_q,
		usedw_out = usedw,
		valid_rreq = (rreq & b_non_empty),
		valid_wreq = (wreq & (~ b_full));
endmodule //fifo1024_a_fefifo


//altdpram DEVICE_FAMILY="Cyclone II" INTENDED_DEVICE_FAMILY="Cyclone II" RDCONTROL_ACLR="OFF" RDCONTROL_REG="UNREGISTERED" SUPPRESS_MEMORY_CONVERSION_WARNINGS="ON" USE_EAB="ON" WIDTH=16 WIDTHAD=10 data inclock outclock outclocken q rdaddress wraddress wren
//VERSION_BEGIN 13.0 cbx_altdpram 2013:06:12:18:03:43:SJ cbx_altsyncram 2013:06:12:18:03:43:SJ cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_lpm_mux 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ cbx_stratixiii 2013:06:12:18:03:43:SJ cbx_stratixv 2013:06:12:18:03:43:SJ cbx_util_mgl 2013:06:12:18:03:43:SJ  VERSION_END


//altsyncram ADDRESS_ACLR_A="NONE" ADDRESS_ACLR_B="NONE" ADDRESS_REG_B="CLOCK1" DEVICE_FAMILY="Cyclone II" INDATA_ACLR_A="NONE" OPERATION_MODE="DUAL_PORT" OUTDATA_ACLR_B="NONE" OUTDATA_REG_B="UNREGISTERED" RDCONTROL_ACLR_B="NONE" RDCONTROL_REG_B="CLOCK0" READ_DURING_WRITE_MODE_MIXED_PORTS="DONT_CARE" WIDTH_A=16 WIDTH_B=16 WIDTH_BYTEENA_A=2 WIDTH_BYTEENA_B=2 WIDTHAD_A=10 WIDTHAD_B=10 WRCONTROL_ACLR_A="NONE" address_a address_b clock0 clock1 clocken1 data_a q_b wren_a
//VERSION_BEGIN 13.0 cbx_altsyncram 2013:06:12:18:03:43:SJ cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_lpm_mux 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ cbx_stratixiii 2013:06:12:18:03:43:SJ cbx_stratixv 2013:06:12:18:03:43:SJ cbx_util_mgl 2013:06:12:18:03:43:SJ  VERSION_END


//altsyncram ADDRESS_REG_B="CLOCK1" CLOCK_ENABLE_INPUT_A="NORMAL" CLOCK_ENABLE_INPUT_B="NORMAL" CYCLONEII_SAFE_WRITE="NO_CHANGE" DEVICE_FAMILY="Cyclone II" OPERATION_MODE="BIDIR_DUAL_PORT" WIDTH_A=16 WIDTH_B=16 WIDTH_BYTEENA_A=1 WIDTH_BYTEENA_B=2 WIDTHAD_A=10 WIDTHAD_B=10 WRCONTROL_WRADDRESS_REG_B="CLOCK1" address_a address_b clock0 clock1 clocken0 clocken1 data_a data_b q_a wren_a wren_b
//VERSION_BEGIN 13.0 cbx_altsyncram 2013:06:12:18:03:43:SJ cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_lpm_mux 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ cbx_stratixiii 2013:06:12:18:03:43:SJ cbx_stratixv 2013:06:12:18:03:43:SJ cbx_util_mgl 2013:06:12:18:03:43:SJ  VERSION_END

//synthesis_resources = M4K 4 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION"} *)
module  fifo1024_altsyncram1
	( 
	address_a,
	address_b,
	clock0,
	clock1,
	clocken0,
	clocken1,
	data_a,
	data_b,
	q_a,
	q_b,
	wren_a,
	wren_b) /* synthesis synthesis_clearbox=1 */;
	input   [9:0]  address_a;
	input   [9:0]  address_b;
	input   clock0;
	input   clock1;
	input   clocken0;
	input   clocken1;
	input   [15:0]  data_a;
	input   [15:0]  data_b;
	output   [15:0]  q_a;
	output   [15:0]  q_b;
	input   wren_a;
	input   wren_b;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   [9:0]  address_b;
	tri1   clock0;
	tri1   clock1;
	tri1   clocken0;
	tri1   clocken1;
	tri1   [15:0]  data_a;
	tri1   [15:0]  data_b;
	tri0   wren_a;
	tri0   wren_b;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]   wire_ram_block4a_0portadataout;
	wire  [0:0]   wire_ram_block4a_1portadataout;
	wire  [0:0]   wire_ram_block4a_2portadataout;
	wire  [0:0]   wire_ram_block4a_3portadataout;
	wire  [0:0]   wire_ram_block4a_4portadataout;
	wire  [0:0]   wire_ram_block4a_5portadataout;
	wire  [0:0]   wire_ram_block4a_6portadataout;
	wire  [0:0]   wire_ram_block4a_7portadataout;
	wire  [0:0]   wire_ram_block4a_8portadataout;
	wire  [0:0]   wire_ram_block4a_9portadataout;
	wire  [0:0]   wire_ram_block4a_10portadataout;
	wire  [0:0]   wire_ram_block4a_11portadataout;
	wire  [0:0]   wire_ram_block4a_12portadataout;
	wire  [0:0]   wire_ram_block4a_13portadataout;
	wire  [0:0]   wire_ram_block4a_14portadataout;
	wire  [0:0]   wire_ram_block4a_15portadataout;
	wire  [0:0]   wire_ram_block4a_0portbdataout;
	wire  [0:0]   wire_ram_block4a_1portbdataout;
	wire  [0:0]   wire_ram_block4a_2portbdataout;
	wire  [0:0]   wire_ram_block4a_3portbdataout;
	wire  [0:0]   wire_ram_block4a_4portbdataout;
	wire  [0:0]   wire_ram_block4a_5portbdataout;
	wire  [0:0]   wire_ram_block4a_6portbdataout;
	wire  [0:0]   wire_ram_block4a_7portbdataout;
	wire  [0:0]   wire_ram_block4a_8portbdataout;
	wire  [0:0]   wire_ram_block4a_9portbdataout;
	wire  [0:0]   wire_ram_block4a_10portbdataout;
	wire  [0:0]   wire_ram_block4a_11portbdataout;
	wire  [0:0]   wire_ram_block4a_12portbdataout;
	wire  [0:0]   wire_ram_block4a_13portbdataout;
	wire  [0:0]   wire_ram_block4a_14portbdataout;
	wire  [0:0]   wire_ram_block4a_15portbdataout;
	wire  [9:0]  address_a_wire;
	wire  [9:0]  address_b_wire;

	cycloneii_ram_block   ram_block4a_0
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[0]}),
	.portadataout(wire_ram_block4a_0portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[0]}),
	.portbdataout(wire_ram_block4a_0portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_0.connectivity_checking = "OFF",
		ram_block4a_0.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_0.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_0.operation_mode = "bidir_dual_port",
		ram_block4a_0.port_a_address_width = 10,
		ram_block4a_0.port_a_data_width = 1,
		ram_block4a_0.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_0.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_0.port_a_first_address = 0,
		ram_block4a_0.port_a_first_bit_number = 0,
		ram_block4a_0.port_a_last_address = 1023,
		ram_block4a_0.port_a_logical_ram_depth = 1024,
		ram_block4a_0.port_a_logical_ram_width = 16,
		ram_block4a_0.port_b_address_clock = "clock1",
		ram_block4a_0.port_b_address_width = 10,
		ram_block4a_0.port_b_data_in_clock = "clock1",
		ram_block4a_0.port_b_data_width = 1,
		ram_block4a_0.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_0.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_0.port_b_first_address = 0,
		ram_block4a_0.port_b_first_bit_number = 0,
		ram_block4a_0.port_b_last_address = 1023,
		ram_block4a_0.port_b_logical_ram_depth = 1024,
		ram_block4a_0.port_b_logical_ram_width = 16,
		ram_block4a_0.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_0.ram_block_type = "AUTO",
		ram_block4a_0.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_1
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[1]}),
	.portadataout(wire_ram_block4a_1portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[1]}),
	.portbdataout(wire_ram_block4a_1portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_1.connectivity_checking = "OFF",
		ram_block4a_1.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_1.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_1.operation_mode = "bidir_dual_port",
		ram_block4a_1.port_a_address_width = 10,
		ram_block4a_1.port_a_data_width = 1,
		ram_block4a_1.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_1.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_1.port_a_first_address = 0,
		ram_block4a_1.port_a_first_bit_number = 1,
		ram_block4a_1.port_a_last_address = 1023,
		ram_block4a_1.port_a_logical_ram_depth = 1024,
		ram_block4a_1.port_a_logical_ram_width = 16,
		ram_block4a_1.port_b_address_clock = "clock1",
		ram_block4a_1.port_b_address_width = 10,
		ram_block4a_1.port_b_data_in_clock = "clock1",
		ram_block4a_1.port_b_data_width = 1,
		ram_block4a_1.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_1.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_1.port_b_first_address = 0,
		ram_block4a_1.port_b_first_bit_number = 1,
		ram_block4a_1.port_b_last_address = 1023,
		ram_block4a_1.port_b_logical_ram_depth = 1024,
		ram_block4a_1.port_b_logical_ram_width = 16,
		ram_block4a_1.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_1.ram_block_type = "AUTO",
		ram_block4a_1.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_2
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[2]}),
	.portadataout(wire_ram_block4a_2portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[2]}),
	.portbdataout(wire_ram_block4a_2portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_2.connectivity_checking = "OFF",
		ram_block4a_2.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_2.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_2.operation_mode = "bidir_dual_port",
		ram_block4a_2.port_a_address_width = 10,
		ram_block4a_2.port_a_data_width = 1,
		ram_block4a_2.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_2.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_2.port_a_first_address = 0,
		ram_block4a_2.port_a_first_bit_number = 2,
		ram_block4a_2.port_a_last_address = 1023,
		ram_block4a_2.port_a_logical_ram_depth = 1024,
		ram_block4a_2.port_a_logical_ram_width = 16,
		ram_block4a_2.port_b_address_clock = "clock1",
		ram_block4a_2.port_b_address_width = 10,
		ram_block4a_2.port_b_data_in_clock = "clock1",
		ram_block4a_2.port_b_data_width = 1,
		ram_block4a_2.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_2.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_2.port_b_first_address = 0,
		ram_block4a_2.port_b_first_bit_number = 2,
		ram_block4a_2.port_b_last_address = 1023,
		ram_block4a_2.port_b_logical_ram_depth = 1024,
		ram_block4a_2.port_b_logical_ram_width = 16,
		ram_block4a_2.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_2.ram_block_type = "AUTO",
		ram_block4a_2.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_3
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[3]}),
	.portadataout(wire_ram_block4a_3portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[3]}),
	.portbdataout(wire_ram_block4a_3portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_3.connectivity_checking = "OFF",
		ram_block4a_3.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_3.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_3.operation_mode = "bidir_dual_port",
		ram_block4a_3.port_a_address_width = 10,
		ram_block4a_3.port_a_data_width = 1,
		ram_block4a_3.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_3.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_3.port_a_first_address = 0,
		ram_block4a_3.port_a_first_bit_number = 3,
		ram_block4a_3.port_a_last_address = 1023,
		ram_block4a_3.port_a_logical_ram_depth = 1024,
		ram_block4a_3.port_a_logical_ram_width = 16,
		ram_block4a_3.port_b_address_clock = "clock1",
		ram_block4a_3.port_b_address_width = 10,
		ram_block4a_3.port_b_data_in_clock = "clock1",
		ram_block4a_3.port_b_data_width = 1,
		ram_block4a_3.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_3.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_3.port_b_first_address = 0,
		ram_block4a_3.port_b_first_bit_number = 3,
		ram_block4a_3.port_b_last_address = 1023,
		ram_block4a_3.port_b_logical_ram_depth = 1024,
		ram_block4a_3.port_b_logical_ram_width = 16,
		ram_block4a_3.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_3.ram_block_type = "AUTO",
		ram_block4a_3.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_4
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[4]}),
	.portadataout(wire_ram_block4a_4portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[4]}),
	.portbdataout(wire_ram_block4a_4portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_4.connectivity_checking = "OFF",
		ram_block4a_4.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_4.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_4.operation_mode = "bidir_dual_port",
		ram_block4a_4.port_a_address_width = 10,
		ram_block4a_4.port_a_data_width = 1,
		ram_block4a_4.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_4.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_4.port_a_first_address = 0,
		ram_block4a_4.port_a_first_bit_number = 4,
		ram_block4a_4.port_a_last_address = 1023,
		ram_block4a_4.port_a_logical_ram_depth = 1024,
		ram_block4a_4.port_a_logical_ram_width = 16,
		ram_block4a_4.port_b_address_clock = "clock1",
		ram_block4a_4.port_b_address_width = 10,
		ram_block4a_4.port_b_data_in_clock = "clock1",
		ram_block4a_4.port_b_data_width = 1,
		ram_block4a_4.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_4.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_4.port_b_first_address = 0,
		ram_block4a_4.port_b_first_bit_number = 4,
		ram_block4a_4.port_b_last_address = 1023,
		ram_block4a_4.port_b_logical_ram_depth = 1024,
		ram_block4a_4.port_b_logical_ram_width = 16,
		ram_block4a_4.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_4.ram_block_type = "AUTO",
		ram_block4a_4.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_5
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[5]}),
	.portadataout(wire_ram_block4a_5portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[5]}),
	.portbdataout(wire_ram_block4a_5portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_5.connectivity_checking = "OFF",
		ram_block4a_5.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_5.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_5.operation_mode = "bidir_dual_port",
		ram_block4a_5.port_a_address_width = 10,
		ram_block4a_5.port_a_data_width = 1,
		ram_block4a_5.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_5.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_5.port_a_first_address = 0,
		ram_block4a_5.port_a_first_bit_number = 5,
		ram_block4a_5.port_a_last_address = 1023,
		ram_block4a_5.port_a_logical_ram_depth = 1024,
		ram_block4a_5.port_a_logical_ram_width = 16,
		ram_block4a_5.port_b_address_clock = "clock1",
		ram_block4a_5.port_b_address_width = 10,
		ram_block4a_5.port_b_data_in_clock = "clock1",
		ram_block4a_5.port_b_data_width = 1,
		ram_block4a_5.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_5.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_5.port_b_first_address = 0,
		ram_block4a_5.port_b_first_bit_number = 5,
		ram_block4a_5.port_b_last_address = 1023,
		ram_block4a_5.port_b_logical_ram_depth = 1024,
		ram_block4a_5.port_b_logical_ram_width = 16,
		ram_block4a_5.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_5.ram_block_type = "AUTO",
		ram_block4a_5.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_6
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[6]}),
	.portadataout(wire_ram_block4a_6portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[6]}),
	.portbdataout(wire_ram_block4a_6portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_6.connectivity_checking = "OFF",
		ram_block4a_6.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_6.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_6.operation_mode = "bidir_dual_port",
		ram_block4a_6.port_a_address_width = 10,
		ram_block4a_6.port_a_data_width = 1,
		ram_block4a_6.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_6.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_6.port_a_first_address = 0,
		ram_block4a_6.port_a_first_bit_number = 6,
		ram_block4a_6.port_a_last_address = 1023,
		ram_block4a_6.port_a_logical_ram_depth = 1024,
		ram_block4a_6.port_a_logical_ram_width = 16,
		ram_block4a_6.port_b_address_clock = "clock1",
		ram_block4a_6.port_b_address_width = 10,
		ram_block4a_6.port_b_data_in_clock = "clock1",
		ram_block4a_6.port_b_data_width = 1,
		ram_block4a_6.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_6.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_6.port_b_first_address = 0,
		ram_block4a_6.port_b_first_bit_number = 6,
		ram_block4a_6.port_b_last_address = 1023,
		ram_block4a_6.port_b_logical_ram_depth = 1024,
		ram_block4a_6.port_b_logical_ram_width = 16,
		ram_block4a_6.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_6.ram_block_type = "AUTO",
		ram_block4a_6.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_7
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[7]}),
	.portadataout(wire_ram_block4a_7portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[7]}),
	.portbdataout(wire_ram_block4a_7portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_7.connectivity_checking = "OFF",
		ram_block4a_7.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_7.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_7.operation_mode = "bidir_dual_port",
		ram_block4a_7.port_a_address_width = 10,
		ram_block4a_7.port_a_data_width = 1,
		ram_block4a_7.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_7.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_7.port_a_first_address = 0,
		ram_block4a_7.port_a_first_bit_number = 7,
		ram_block4a_7.port_a_last_address = 1023,
		ram_block4a_7.port_a_logical_ram_depth = 1024,
		ram_block4a_7.port_a_logical_ram_width = 16,
		ram_block4a_7.port_b_address_clock = "clock1",
		ram_block4a_7.port_b_address_width = 10,
		ram_block4a_7.port_b_data_in_clock = "clock1",
		ram_block4a_7.port_b_data_width = 1,
		ram_block4a_7.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_7.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_7.port_b_first_address = 0,
		ram_block4a_7.port_b_first_bit_number = 7,
		ram_block4a_7.port_b_last_address = 1023,
		ram_block4a_7.port_b_logical_ram_depth = 1024,
		ram_block4a_7.port_b_logical_ram_width = 16,
		ram_block4a_7.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_7.ram_block_type = "AUTO",
		ram_block4a_7.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_8
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[8]}),
	.portadataout(wire_ram_block4a_8portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[8]}),
	.portbdataout(wire_ram_block4a_8portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_8.connectivity_checking = "OFF",
		ram_block4a_8.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_8.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_8.operation_mode = "bidir_dual_port",
		ram_block4a_8.port_a_address_width = 10,
		ram_block4a_8.port_a_data_width = 1,
		ram_block4a_8.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_8.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_8.port_a_first_address = 0,
		ram_block4a_8.port_a_first_bit_number = 8,
		ram_block4a_8.port_a_last_address = 1023,
		ram_block4a_8.port_a_logical_ram_depth = 1024,
		ram_block4a_8.port_a_logical_ram_width = 16,
		ram_block4a_8.port_b_address_clock = "clock1",
		ram_block4a_8.port_b_address_width = 10,
		ram_block4a_8.port_b_data_in_clock = "clock1",
		ram_block4a_8.port_b_data_width = 1,
		ram_block4a_8.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_8.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_8.port_b_first_address = 0,
		ram_block4a_8.port_b_first_bit_number = 8,
		ram_block4a_8.port_b_last_address = 1023,
		ram_block4a_8.port_b_logical_ram_depth = 1024,
		ram_block4a_8.port_b_logical_ram_width = 16,
		ram_block4a_8.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_8.ram_block_type = "AUTO",
		ram_block4a_8.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_9
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[9]}),
	.portadataout(wire_ram_block4a_9portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[9]}),
	.portbdataout(wire_ram_block4a_9portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_9.connectivity_checking = "OFF",
		ram_block4a_9.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_9.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_9.operation_mode = "bidir_dual_port",
		ram_block4a_9.port_a_address_width = 10,
		ram_block4a_9.port_a_data_width = 1,
		ram_block4a_9.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_9.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_9.port_a_first_address = 0,
		ram_block4a_9.port_a_first_bit_number = 9,
		ram_block4a_9.port_a_last_address = 1023,
		ram_block4a_9.port_a_logical_ram_depth = 1024,
		ram_block4a_9.port_a_logical_ram_width = 16,
		ram_block4a_9.port_b_address_clock = "clock1",
		ram_block4a_9.port_b_address_width = 10,
		ram_block4a_9.port_b_data_in_clock = "clock1",
		ram_block4a_9.port_b_data_width = 1,
		ram_block4a_9.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_9.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_9.port_b_first_address = 0,
		ram_block4a_9.port_b_first_bit_number = 9,
		ram_block4a_9.port_b_last_address = 1023,
		ram_block4a_9.port_b_logical_ram_depth = 1024,
		ram_block4a_9.port_b_logical_ram_width = 16,
		ram_block4a_9.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_9.ram_block_type = "AUTO",
		ram_block4a_9.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_10
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[10]}),
	.portadataout(wire_ram_block4a_10portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[10]}),
	.portbdataout(wire_ram_block4a_10portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_10.connectivity_checking = "OFF",
		ram_block4a_10.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_10.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_10.operation_mode = "bidir_dual_port",
		ram_block4a_10.port_a_address_width = 10,
		ram_block4a_10.port_a_data_width = 1,
		ram_block4a_10.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_10.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_10.port_a_first_address = 0,
		ram_block4a_10.port_a_first_bit_number = 10,
		ram_block4a_10.port_a_last_address = 1023,
		ram_block4a_10.port_a_logical_ram_depth = 1024,
		ram_block4a_10.port_a_logical_ram_width = 16,
		ram_block4a_10.port_b_address_clock = "clock1",
		ram_block4a_10.port_b_address_width = 10,
		ram_block4a_10.port_b_data_in_clock = "clock1",
		ram_block4a_10.port_b_data_width = 1,
		ram_block4a_10.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_10.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_10.port_b_first_address = 0,
		ram_block4a_10.port_b_first_bit_number = 10,
		ram_block4a_10.port_b_last_address = 1023,
		ram_block4a_10.port_b_logical_ram_depth = 1024,
		ram_block4a_10.port_b_logical_ram_width = 16,
		ram_block4a_10.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_10.ram_block_type = "AUTO",
		ram_block4a_10.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_11
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[11]}),
	.portadataout(wire_ram_block4a_11portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[11]}),
	.portbdataout(wire_ram_block4a_11portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_11.connectivity_checking = "OFF",
		ram_block4a_11.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_11.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_11.operation_mode = "bidir_dual_port",
		ram_block4a_11.port_a_address_width = 10,
		ram_block4a_11.port_a_data_width = 1,
		ram_block4a_11.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_11.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_11.port_a_first_address = 0,
		ram_block4a_11.port_a_first_bit_number = 11,
		ram_block4a_11.port_a_last_address = 1023,
		ram_block4a_11.port_a_logical_ram_depth = 1024,
		ram_block4a_11.port_a_logical_ram_width = 16,
		ram_block4a_11.port_b_address_clock = "clock1",
		ram_block4a_11.port_b_address_width = 10,
		ram_block4a_11.port_b_data_in_clock = "clock1",
		ram_block4a_11.port_b_data_width = 1,
		ram_block4a_11.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_11.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_11.port_b_first_address = 0,
		ram_block4a_11.port_b_first_bit_number = 11,
		ram_block4a_11.port_b_last_address = 1023,
		ram_block4a_11.port_b_logical_ram_depth = 1024,
		ram_block4a_11.port_b_logical_ram_width = 16,
		ram_block4a_11.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_11.ram_block_type = "AUTO",
		ram_block4a_11.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_12
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[12]}),
	.portadataout(wire_ram_block4a_12portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[12]}),
	.portbdataout(wire_ram_block4a_12portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_12.connectivity_checking = "OFF",
		ram_block4a_12.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_12.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_12.operation_mode = "bidir_dual_port",
		ram_block4a_12.port_a_address_width = 10,
		ram_block4a_12.port_a_data_width = 1,
		ram_block4a_12.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_12.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_12.port_a_first_address = 0,
		ram_block4a_12.port_a_first_bit_number = 12,
		ram_block4a_12.port_a_last_address = 1023,
		ram_block4a_12.port_a_logical_ram_depth = 1024,
		ram_block4a_12.port_a_logical_ram_width = 16,
		ram_block4a_12.port_b_address_clock = "clock1",
		ram_block4a_12.port_b_address_width = 10,
		ram_block4a_12.port_b_data_in_clock = "clock1",
		ram_block4a_12.port_b_data_width = 1,
		ram_block4a_12.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_12.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_12.port_b_first_address = 0,
		ram_block4a_12.port_b_first_bit_number = 12,
		ram_block4a_12.port_b_last_address = 1023,
		ram_block4a_12.port_b_logical_ram_depth = 1024,
		ram_block4a_12.port_b_logical_ram_width = 16,
		ram_block4a_12.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_12.ram_block_type = "AUTO",
		ram_block4a_12.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_13
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[13]}),
	.portadataout(wire_ram_block4a_13portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[13]}),
	.portbdataout(wire_ram_block4a_13portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_13.connectivity_checking = "OFF",
		ram_block4a_13.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_13.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_13.operation_mode = "bidir_dual_port",
		ram_block4a_13.port_a_address_width = 10,
		ram_block4a_13.port_a_data_width = 1,
		ram_block4a_13.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_13.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_13.port_a_first_address = 0,
		ram_block4a_13.port_a_first_bit_number = 13,
		ram_block4a_13.port_a_last_address = 1023,
		ram_block4a_13.port_a_logical_ram_depth = 1024,
		ram_block4a_13.port_a_logical_ram_width = 16,
		ram_block4a_13.port_b_address_clock = "clock1",
		ram_block4a_13.port_b_address_width = 10,
		ram_block4a_13.port_b_data_in_clock = "clock1",
		ram_block4a_13.port_b_data_width = 1,
		ram_block4a_13.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_13.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_13.port_b_first_address = 0,
		ram_block4a_13.port_b_first_bit_number = 13,
		ram_block4a_13.port_b_last_address = 1023,
		ram_block4a_13.port_b_logical_ram_depth = 1024,
		ram_block4a_13.port_b_logical_ram_width = 16,
		ram_block4a_13.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_13.ram_block_type = "AUTO",
		ram_block4a_13.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_14
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[14]}),
	.portadataout(wire_ram_block4a_14portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[14]}),
	.portbdataout(wire_ram_block4a_14portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_14.connectivity_checking = "OFF",
		ram_block4a_14.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_14.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_14.operation_mode = "bidir_dual_port",
		ram_block4a_14.port_a_address_width = 10,
		ram_block4a_14.port_a_data_width = 1,
		ram_block4a_14.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_14.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_14.port_a_first_address = 0,
		ram_block4a_14.port_a_first_bit_number = 14,
		ram_block4a_14.port_a_last_address = 1023,
		ram_block4a_14.port_a_logical_ram_depth = 1024,
		ram_block4a_14.port_a_logical_ram_width = 16,
		ram_block4a_14.port_b_address_clock = "clock1",
		ram_block4a_14.port_b_address_width = 10,
		ram_block4a_14.port_b_data_in_clock = "clock1",
		ram_block4a_14.port_b_data_width = 1,
		ram_block4a_14.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_14.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_14.port_b_first_address = 0,
		ram_block4a_14.port_b_first_bit_number = 14,
		ram_block4a_14.port_b_last_address = 1023,
		ram_block4a_14.port_b_logical_ram_depth = 1024,
		ram_block4a_14.port_b_logical_ram_width = 16,
		ram_block4a_14.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_14.ram_block_type = "AUTO",
		ram_block4a_14.lpm_type = "cycloneii_ram_block";
	cycloneii_ram_block   ram_block4a_15
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(clocken0),
	.ena1(clocken1),
	.portaaddr({address_a_wire[9:0]}),
	.portadatain({data_a[15]}),
	.portadataout(wire_ram_block4a_15portadataout[0:0]),
	.portawe(wren_a),
	.portbaddr({address_b_wire[9:0]}),
	.portbdatain({data_b[15]}),
	.portbdataout(wire_ram_block4a_15portbdataout[0:0]),
	.portbrewe(wren_b)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}})
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block4a_15.connectivity_checking = "OFF",
		ram_block4a_15.logical_ram_name = "ALTSYNCRAM",
		ram_block4a_15.mixed_port_feed_through_mode = "dont_care",
		ram_block4a_15.operation_mode = "bidir_dual_port",
		ram_block4a_15.port_a_address_width = 10,
		ram_block4a_15.port_a_data_width = 1,
		ram_block4a_15.port_a_disable_ce_on_input_registers = "off",
		ram_block4a_15.port_a_disable_ce_on_output_registers = "on",
		ram_block4a_15.port_a_first_address = 0,
		ram_block4a_15.port_a_first_bit_number = 15,
		ram_block4a_15.port_a_last_address = 1023,
		ram_block4a_15.port_a_logical_ram_depth = 1024,
		ram_block4a_15.port_a_logical_ram_width = 16,
		ram_block4a_15.port_b_address_clock = "clock1",
		ram_block4a_15.port_b_address_width = 10,
		ram_block4a_15.port_b_data_in_clock = "clock1",
		ram_block4a_15.port_b_data_width = 1,
		ram_block4a_15.port_b_disable_ce_on_input_registers = "off",
		ram_block4a_15.port_b_disable_ce_on_output_registers = "on",
		ram_block4a_15.port_b_first_address = 0,
		ram_block4a_15.port_b_first_bit_number = 15,
		ram_block4a_15.port_b_last_address = 1023,
		ram_block4a_15.port_b_logical_ram_depth = 1024,
		ram_block4a_15.port_b_logical_ram_width = 16,
		ram_block4a_15.port_b_read_enable_write_enable_clock = "clock1",
		ram_block4a_15.ram_block_type = "AUTO",
		ram_block4a_15.lpm_type = "cycloneii_ram_block";
	assign
		address_a_wire = address_a,
		address_b_wire = address_b,
		q_a = {wire_ram_block4a_15portadataout[0], wire_ram_block4a_14portadataout[0], wire_ram_block4a_13portadataout[0], wire_ram_block4a_12portadataout[0], wire_ram_block4a_11portadataout[0], wire_ram_block4a_10portadataout[0], wire_ram_block4a_9portadataout[0], wire_ram_block4a_8portadataout[0], wire_ram_block4a_7portadataout[0], wire_ram_block4a_6portadataout[0], wire_ram_block4a_5portadataout[0], wire_ram_block4a_4portadataout[0], wire_ram_block4a_3portadataout[0], wire_ram_block4a_2portadataout[0], wire_ram_block4a_1portadataout[0], wire_ram_block4a_0portadataout[0]},
		q_b = {wire_ram_block4a_15portbdataout[0], wire_ram_block4a_14portbdataout[0], wire_ram_block4a_13portbdataout[0], wire_ram_block4a_12portbdataout[0], wire_ram_block4a_11portbdataout[0], wire_ram_block4a_10portbdataout[0], wire_ram_block4a_9portbdataout[0], wire_ram_block4a_8portbdataout[0], wire_ram_block4a_7portbdataout[0], wire_ram_block4a_6portbdataout[0], wire_ram_block4a_5portbdataout[0], wire_ram_block4a_4portbdataout[0], wire_ram_block4a_3portbdataout[0], wire_ram_block4a_2portbdataout[0], wire_ram_block4a_1portbdataout[0], wire_ram_block4a_0portbdataout[0]};
endmodule //fifo1024_altsyncram1

//synthesis_resources = M4K 4 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION"} *)
module  fifo1024_altsyncram
	( 
	address_a,
	address_b,
	clock0,
	clock1,
	clocken1,
	data_a,
	q_b,
	wren_a) /* synthesis synthesis_clearbox=1 */;
	input   [9:0]  address_a;
	input   [9:0]  address_b;
	input   clock0;
	input   clock1;
	input   clocken1;
	input   [15:0]  data_a;
	output   [15:0]  q_b;
	input   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   [9:0]  address_b;
	tri1   clock0;
	tri1   clock1;
	tri1   clocken1;
	tri1   [15:0]  data_a;
	tri0   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [15:0]   wire_altsyncram3_q_a;
	wire  [15:0]   wire_altsyncram3_q_b;

	fifo1024_altsyncram1   altsyncram3
	( 
	.address_a(address_b),
	.address_b(address_a),
	.clock0(clock1),
	.clock1(clock0),
	.clocken0(clocken1),
	.clocken1(wren_a),
	.data_a({16{1'b1}}),
	.data_b(data_a),
	.q_a(wire_altsyncram3_q_a),
	.q_b(wire_altsyncram3_q_b),
	.wren_a(1'b0),
	.wren_b(wren_a));
	assign
		q_b = wire_altsyncram3_q_a;
endmodule //fifo1024_altsyncram

//synthesis_resources = M4K 4 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fifo1024_dpram
	( 
	data,
	inclock,
	outclock,
	outclocken,
	q,
	rdaddress,
	wraddress,
	wren) /* synthesis synthesis_clearbox=1 */;
	input   [15:0]  data;
	input   inclock;
	input   outclock;
	input   outclocken;
	output   [15:0]  q;
	input   [9:0]  rdaddress;
	input   [9:0]  wraddress;
	input   wren;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   inclock;
	tri1   outclock;
	tri1   outclocken;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [15:0]   wire_altsyncram2_q_b;

	fifo1024_altsyncram   altsyncram2
	( 
	.address_a(wraddress),
	.address_b(rdaddress),
	.clock0(inclock),
	.clock1(outclock),
	.clocken1(outclocken),
	.data_a(data),
	.q_b(wire_altsyncram2_q_b),
	.wren_a(wren));
	assign
		q = wire_altsyncram2_q_b;
endmodule //fifo1024_dpram


//lpm_counter DEVICE_FAMILY="Cyclone II" lpm_direction="UP" lpm_port_updown="PORT_UNUSED" lpm_width=10 aclr clock cnt_en q sclr
//VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_counter 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END

//synthesis_resources = lut 10 reg 10 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fifo1024_cntr1
	( 
	aclr,
	clock,
	cnt_en,
	q,
	sclr) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clock;
	input   cnt_en;
	output   [9:0]  q;
	input   sclr;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   cnt_en;
	tri0   sclr;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]   wire_counter_comb_bita_0combout;
	wire  [0:0]   wire_counter_comb_bita_1combout;
	wire  [0:0]   wire_counter_comb_bita_2combout;
	wire  [0:0]   wire_counter_comb_bita_3combout;
	wire  [0:0]   wire_counter_comb_bita_4combout;
	wire  [0:0]   wire_counter_comb_bita_5combout;
	wire  [0:0]   wire_counter_comb_bita_6combout;
	wire  [0:0]   wire_counter_comb_bita_7combout;
	wire  [0:0]   wire_counter_comb_bita_8combout;
	wire  [0:0]   wire_counter_comb_bita_9combout;
	wire  [0:0]   wire_counter_comb_bita_0cout;
	wire  [0:0]   wire_counter_comb_bita_1cout;
	wire  [0:0]   wire_counter_comb_bita_2cout;
	wire  [0:0]   wire_counter_comb_bita_3cout;
	wire  [0:0]   wire_counter_comb_bita_4cout;
	wire  [0:0]   wire_counter_comb_bita_5cout;
	wire  [0:0]   wire_counter_comb_bita_6cout;
	wire  [0:0]   wire_counter_comb_bita_7cout;
	wire  [0:0]   wire_counter_comb_bita_8cout;
	wire  [9:0]   wire_counter_reg_bit5a_regout;
	wire  [9:0]   wire_counter_reg_bit5a_sdata;
	wire  aclr_actual;
	wire clk_en;
	wire [9:0]  data;
	wire  external_cin;
	wire  [9:0]  s_val;
	wire  [9:0]  safe_q;
	wire sload;
	wire sset;
	wire  updown_dir;

	cycloneii_lcell_comb   counter_comb_bita_0
	( 
	.cin(external_cin),
	.combout(wire_counter_comb_bita_0combout[0:0]),
	.cout(wire_counter_comb_bita_0cout[0:0]),
	.dataa(wire_counter_reg_bit5a_regout[0:0]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_0.lut_mask = 16'h5A90,
		counter_comb_bita_0.sum_lutc_input = "cin",
		counter_comb_bita_0.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_1
	( 
	.cin(wire_counter_comb_bita_0cout[0:0]),
	.combout(wire_counter_comb_bita_1combout[0:0]),
	.cout(wire_counter_comb_bita_1cout[0:0]),
	.dataa(wire_counter_reg_bit5a_regout[1:1]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_1.lut_mask = 16'h5A90,
		counter_comb_bita_1.sum_lutc_input = "cin",
		counter_comb_bita_1.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_2
	( 
	.cin(wire_counter_comb_bita_1cout[0:0]),
	.combout(wire_counter_comb_bita_2combout[0:0]),
	.cout(wire_counter_comb_bita_2cout[0:0]),
	.dataa(wire_counter_reg_bit5a_regout[2:2]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_2.lut_mask = 16'h5A90,
		counter_comb_bita_2.sum_lutc_input = "cin",
		counter_comb_bita_2.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_3
	( 
	.cin(wire_counter_comb_bita_2cout[0:0]),
	.combout(wire_counter_comb_bita_3combout[0:0]),
	.cout(wire_counter_comb_bita_3cout[0:0]),
	.dataa(wire_counter_reg_bit5a_regout[3:3]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_3.lut_mask = 16'h5A90,
		counter_comb_bita_3.sum_lutc_input = "cin",
		counter_comb_bita_3.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_4
	( 
	.cin(wire_counter_comb_bita_3cout[0:0]),
	.combout(wire_counter_comb_bita_4combout[0:0]),
	.cout(wire_counter_comb_bita_4cout[0:0]),
	.dataa(wire_counter_reg_bit5a_regout[4:4]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_4.lut_mask = 16'h5A90,
		counter_comb_bita_4.sum_lutc_input = "cin",
		counter_comb_bita_4.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_5
	( 
	.cin(wire_counter_comb_bita_4cout[0:0]),
	.combout(wire_counter_comb_bita_5combout[0:0]),
	.cout(wire_counter_comb_bita_5cout[0:0]),
	.dataa(wire_counter_reg_bit5a_regout[5:5]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_5.lut_mask = 16'h5A90,
		counter_comb_bita_5.sum_lutc_input = "cin",
		counter_comb_bita_5.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_6
	( 
	.cin(wire_counter_comb_bita_5cout[0:0]),
	.combout(wire_counter_comb_bita_6combout[0:0]),
	.cout(wire_counter_comb_bita_6cout[0:0]),
	.dataa(wire_counter_reg_bit5a_regout[6:6]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_6.lut_mask = 16'h5A90,
		counter_comb_bita_6.sum_lutc_input = "cin",
		counter_comb_bita_6.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_7
	( 
	.cin(wire_counter_comb_bita_6cout[0:0]),
	.combout(wire_counter_comb_bita_7combout[0:0]),
	.cout(wire_counter_comb_bita_7cout[0:0]),
	.dataa(wire_counter_reg_bit5a_regout[7:7]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_7.lut_mask = 16'h5A90,
		counter_comb_bita_7.sum_lutc_input = "cin",
		counter_comb_bita_7.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_8
	( 
	.cin(wire_counter_comb_bita_7cout[0:0]),
	.combout(wire_counter_comb_bita_8combout[0:0]),
	.cout(wire_counter_comb_bita_8cout[0:0]),
	.dataa(wire_counter_reg_bit5a_regout[8:8]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_8.lut_mask = 16'h5A90,
		counter_comb_bita_8.sum_lutc_input = "cin",
		counter_comb_bita_8.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_9
	( 
	.cin(wire_counter_comb_bita_8cout[0:0]),
	.combout(wire_counter_comb_bita_9combout[0:0]),
	.cout(),
	.dataa(wire_counter_reg_bit5a_regout[9:9]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_9.lut_mask = 16'h5A90,
		counter_comb_bita_9.sum_lutc_input = "cin",
		counter_comb_bita_9.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_ff   counter_reg_bit5a_0
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_0combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit5a_regout[0:0]),
	.sdata(wire_counter_reg_bit5a_sdata[0:0]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit5a_1
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_1combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit5a_regout[1:1]),
	.sdata(wire_counter_reg_bit5a_sdata[1:1]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit5a_2
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_2combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit5a_regout[2:2]),
	.sdata(wire_counter_reg_bit5a_sdata[2:2]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit5a_3
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_3combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit5a_regout[3:3]),
	.sdata(wire_counter_reg_bit5a_sdata[3:3]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit5a_4
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_4combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit5a_regout[4:4]),
	.sdata(wire_counter_reg_bit5a_sdata[4:4]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit5a_5
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_5combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit5a_regout[5:5]),
	.sdata(wire_counter_reg_bit5a_sdata[5:5]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit5a_6
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_6combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit5a_regout[6:6]),
	.sdata(wire_counter_reg_bit5a_sdata[6:6]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit5a_7
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_7combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit5a_regout[7:7]),
	.sdata(wire_counter_reg_bit5a_sdata[7:7]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit5a_8
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_8combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit5a_regout[8:8]),
	.sdata(wire_counter_reg_bit5a_sdata[8:8]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit5a_9
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_9combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit5a_regout[9:9]),
	.sdata(wire_counter_reg_bit5a_sdata[9:9]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	assign
		wire_counter_reg_bit5a_sdata = ({10{(~ sclr)}} & (({10{sset}} & s_val) | ({10{(~ sset)}} & data)));
	assign
		aclr_actual = aclr,
		clk_en = 1'b1,
		data = {10{1'b0}},
		external_cin = 1'b1,
		q = safe_q,
		s_val = {10{1'b1}},
		safe_q = wire_counter_reg_bit5a_regout,
		sload = 1'b0,
		sset = 1'b0,
		updown_dir = 1'b1;
endmodule //fifo1024_cntr1

//synthesis_resources = lut 30 M4K 4 reg 32 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fifo1024_a_dpfifo
	( 
	aclr,
	clock,
	data,
	empty,
	full,
	q,
	rreq,
	sclr,
	usedw,
	wreq) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clock;
	input   [15:0]  data;
	output   empty;
	output   full;
	output   [15:0]  q;
	input   rreq;
	input   sclr;
	output   [9:0]  usedw;
	input   wreq;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri0   sclr;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  wire_fifo_state_empty;
	wire  wire_fifo_state_full;
	wire  [9:0]   wire_fifo_state_usedw_out;
	wire  [15:0]   wire_FIFOram_q;
	wire  [9:0]   wire_rd_ptr_count_q;
	wire  [9:0]   wire_wr_ptr_q;
	wire  [9:0]  rd_ptr;
	wire  valid_rreq;
	wire  valid_wreq;

	fifo1024_a_fefifo   fifo_state
	( 
	.aclr(aclr),
	.clock(clock),
	.empty(wire_fifo_state_empty),
	.full(wire_fifo_state_full),
	.rreq(rreq),
	.sclr(sclr),
	.usedw_out(wire_fifo_state_usedw_out),
	.wreq(wreq));
	fifo1024_dpram   FIFOram
	( 
	.data(data),
	.inclock(clock),
	.outclock(clock),
	.outclocken((valid_rreq | sclr)),
	.q(wire_FIFOram_q),
	.rdaddress(({10{(~ sclr)}} & rd_ptr)),
	.wraddress(wire_wr_ptr_q),
	.wren(valid_wreq));
	fifo1024_cntr1   rd_ptr_count
	( 
	.aclr(aclr),
	.clock(clock),
	.cnt_en(valid_rreq),
	.q(wire_rd_ptr_count_q),
	.sclr(sclr));
	fifo1024_cntr1   wr_ptr
	( 
	.aclr(aclr),
	.clock(clock),
	.cnt_en(valid_wreq),
	.q(wire_wr_ptr_q),
	.sclr(sclr));
	assign
		empty = wire_fifo_state_empty,
		full = wire_fifo_state_full,
		q = wire_FIFOram_q,
		rd_ptr = wire_rd_ptr_count_q,
		usedw = wire_fifo_state_usedw_out,
		valid_rreq = (rreq & (~ wire_fifo_state_empty)),
		valid_wreq = (wreq & (~ wire_fifo_state_full));
endmodule //fifo1024_a_dpfifo

//synthesis_resources = lut 30 M4K 4 reg 34 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fifo1024_scfifo
	( 
	aclr,
	almost_empty,
	almost_full,
	clock,
	data,
	empty,
	full,
	q,
	rdreq,
	usedw,
	wrreq) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	output   almost_empty;
	output   almost_full;
	input   clock;
	input   [15:0]  data;
	output   empty;
	output   full;
	output   [15:0]  q;
	input   rdreq;
	output   [9:0]  usedw;
	input   wrreq;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  wire_dpfifo_empty;
	wire  wire_dpfifo_full;
	wire  [15:0]   wire_dpfifo_q;
	wire  [9:0]   wire_dpfifo_usedw;
	reg	dffe_af;
	reg	dffe_nae;
	wire  comparison_ae0;
	wire  comparison_ae1;
	wire  comparison_ae2;
	wire  comparison_ae3;
	wire  comparison_ae4;
	wire  comparison_ae5;
	wire  comparison_ae6;
	wire  comparison_ae7;
	wire  comparison_ae8;
	wire  comparison_ae9;
	wire  comparison_af0;
	wire  comparison_af1;
	wire  comparison_af2;
	wire  comparison_af3;
	wire  comparison_af4;
	wire  comparison_af5;
	wire  comparison_af6;
	wire  comparison_af7;
	wire  comparison_af8;
	wire  comparison_af9;
	wire  comparison_pre_ae0;
	wire  comparison_pre_ae1;
	wire  comparison_pre_ae2;
	wire  comparison_pre_ae3;
	wire  comparison_pre_ae4;
	wire  comparison_pre_ae5;
	wire  comparison_pre_ae6;
	wire  comparison_pre_ae7;
	wire  comparison_pre_ae8;
	wire  comparison_pre_ae9;
	wire  comparison_pre_af0;
	wire  comparison_pre_af1;
	wire  comparison_pre_af2;
	wire  comparison_pre_af3;
	wire  comparison_pre_af4;
	wire  comparison_pre_af5;
	wire  comparison_pre_af6;
	wire  comparison_pre_af7;
	wire  comparison_pre_af8;
	wire  comparison_pre_af9;
	wire sclr;
	wire  [9:0]  wire_ae;
	wire  [9:0]  wire_af;
	wire  [9:0]  wire_pre_ae;
	wire  [9:0]  wire_pre_af;

	fifo1024_a_dpfifo   dpfifo
	( 
	.aclr(aclr),
	.clock(clock),
	.data(data),
	.empty(wire_dpfifo_empty),
	.full(wire_dpfifo_full),
	.q(wire_dpfifo_q),
	.rreq(rdreq),
	.sclr(sclr),
	.usedw(wire_dpfifo_usedw),
	.wreq(wrreq));
	// synopsys translate_off
	initial
		dffe_af = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe_af <= 1'b0;
		else  dffe_af <= ((dffe_af & (dffe_af ^ (sclr | ((comparison_af9 & (~ wrreq)) & rdreq)))) | ((~ dffe_af) & ((((~ sclr) & comparison_pre_af9) & wrreq) & (~ rdreq))));
	// synopsys translate_off
	initial
		dffe_nae = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe_nae <= 1'b0;
		else  dffe_nae <= ((dffe_nae & (dffe_nae ^ (sclr | ((comparison_ae9 & (~ wrreq)) & rdreq)))) | ((~ dffe_nae) & ((((~ sclr) & comparison_pre_ae9) & wrreq) & (~ rdreq))));
	assign
		almost_empty = (~ dffe_nae),
		almost_full = dffe_af,
		comparison_ae0 = (wire_dpfifo_usedw[0] ^ wire_ae[0]),
		comparison_ae1 = ((wire_dpfifo_usedw[1] ^ wire_ae[1]) & comparison_ae0),
		comparison_ae2 = ((wire_dpfifo_usedw[2] ^ wire_ae[2]) & comparison_ae1),
		comparison_ae3 = ((wire_dpfifo_usedw[3] ^ wire_ae[3]) & comparison_ae2),
		comparison_ae4 = ((wire_dpfifo_usedw[4] ^ wire_ae[4]) & comparison_ae3),
		comparison_ae5 = ((wire_dpfifo_usedw[5] ^ wire_ae[5]) & comparison_ae4),
		comparison_ae6 = ((wire_dpfifo_usedw[6] ^ wire_ae[6]) & comparison_ae5),
		comparison_ae7 = ((wire_dpfifo_usedw[7] ^ wire_ae[7]) & comparison_ae6),
		comparison_ae8 = ((wire_dpfifo_usedw[8] ^ wire_ae[8]) & comparison_ae7),
		comparison_ae9 = ((wire_dpfifo_usedw[9] ^ wire_ae[9]) & comparison_ae8),
		comparison_af0 = (wire_dpfifo_usedw[0] ^ wire_af[0]),
		comparison_af1 = ((wire_dpfifo_usedw[1] ^ wire_af[1]) & comparison_af0),
		comparison_af2 = ((wire_dpfifo_usedw[2] ^ wire_af[2]) & comparison_af1),
		comparison_af3 = ((wire_dpfifo_usedw[3] ^ wire_af[3]) & comparison_af2),
		comparison_af4 = ((wire_dpfifo_usedw[4] ^ wire_af[4]) & comparison_af3),
		comparison_af5 = ((wire_dpfifo_usedw[5] ^ wire_af[5]) & comparison_af4),
		comparison_af6 = ((wire_dpfifo_usedw[6] ^ wire_af[6]) & comparison_af5),
		comparison_af7 = ((wire_dpfifo_usedw[7] ^ wire_af[7]) & comparison_af6),
		comparison_af8 = ((wire_dpfifo_usedw[8] ^ wire_af[8]) & comparison_af7),
		comparison_af9 = ((wire_dpfifo_usedw[9] ^ wire_af[9]) & comparison_af8),
		comparison_pre_ae0 = (wire_dpfifo_usedw[0] ^ wire_pre_ae[0]),
		comparison_pre_ae1 = ((wire_dpfifo_usedw[1] ^ wire_pre_ae[1]) & comparison_pre_ae0),
		comparison_pre_ae2 = ((wire_dpfifo_usedw[2] ^ wire_pre_ae[2]) & comparison_pre_ae1),
		comparison_pre_ae3 = ((wire_dpfifo_usedw[3] ^ wire_pre_ae[3]) & comparison_pre_ae2),
		comparison_pre_ae4 = ((wire_dpfifo_usedw[4] ^ wire_pre_ae[4]) & comparison_pre_ae3),
		comparison_pre_ae5 = ((wire_dpfifo_usedw[5] ^ wire_pre_ae[5]) & comparison_pre_ae4),
		comparison_pre_ae6 = ((wire_dpfifo_usedw[6] ^ wire_pre_ae[6]) & comparison_pre_ae5),
		comparison_pre_ae7 = ((wire_dpfifo_usedw[7] ^ wire_pre_ae[7]) & comparison_pre_ae6),
		comparison_pre_ae8 = ((wire_dpfifo_usedw[8] ^ wire_pre_ae[8]) & comparison_pre_ae7),
		comparison_pre_ae9 = ((wire_dpfifo_usedw[9] ^ wire_pre_ae[9]) & comparison_pre_ae8),
		comparison_pre_af0 = (wire_dpfifo_usedw[0] ^ wire_pre_af[0]),
		comparison_pre_af1 = ((wire_dpfifo_usedw[1] ^ wire_pre_af[1]) & comparison_pre_af0),
		comparison_pre_af2 = ((wire_dpfifo_usedw[2] ^ wire_pre_af[2]) & comparison_pre_af1),
		comparison_pre_af3 = ((wire_dpfifo_usedw[3] ^ wire_pre_af[3]) & comparison_pre_af2),
		comparison_pre_af4 = ((wire_dpfifo_usedw[4] ^ wire_pre_af[4]) & comparison_pre_af3),
		comparison_pre_af5 = ((wire_dpfifo_usedw[5] ^ wire_pre_af[5]) & comparison_pre_af4),
		comparison_pre_af6 = ((wire_dpfifo_usedw[6] ^ wire_pre_af[6]) & comparison_pre_af5),
		comparison_pre_af7 = ((wire_dpfifo_usedw[7] ^ wire_pre_af[7]) & comparison_pre_af6),
		comparison_pre_af8 = ((wire_dpfifo_usedw[8] ^ wire_pre_af[8]) & comparison_pre_af7),
		comparison_pre_af9 = ((wire_dpfifo_usedw[9] ^ wire_pre_af[9]) & comparison_pre_af8),
		empty = wire_dpfifo_empty,
		full = wire_dpfifo_full,
		q = wire_dpfifo_q,
		sclr = 1'b0,
		usedw = wire_dpfifo_usedw,
		wire_ae = {1'b1, {9{1'b0}}},
		wire_af = {1'b0, 1'b1, {8{1'b0}}},
		wire_pre_ae = {1'b1, {8{1'b0}}, 1'b1},
		wire_pre_af = {1'b0, 1'b1, {7{1'b0}}, 1'b1};
endmodule //fifo1024_scfifo
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module fifo1024 (
	aclr,
	clock,
	data,
	rdreq,
	wrreq,
	almost_empty,
	almost_full,
	empty,
	full,
	q,
	usedw)/* synthesis synthesis_clearbox = 1 */;

	input	  aclr;
	input	  clock;
	input	[15:0]  data;
	input	  rdreq;
	input	  wrreq;
	output	  almost_empty;
	output	  almost_full;
	output	  empty;
	output	  full;
	output	[15:0]  q;
	output	[9:0]  usedw;

	wire [9:0] sub_wire0;
	wire  sub_wire1;
	wire  sub_wire2;
	wire [15:0] sub_wire3;
	wire  sub_wire4;
	wire  sub_wire5;
	wire [9:0] usedw = sub_wire0[9:0];
	wire  empty = sub_wire1;
	wire  full = sub_wire2;
	wire [15:0] q = sub_wire3[15:0];
	wire  almost_empty = sub_wire4;
	wire  almost_full = sub_wire5;

	fifo1024_scfifo	fifo1024_scfifo_component (
				.clock (clock),
				.wrreq (wrreq),
				.aclr (aclr),
				.data (data),
				.rdreq (rdreq),
				.usedw (sub_wire0),
				.empty (sub_wire1),
				.full (sub_wire2),
				.q (sub_wire3),
				.almost_empty (sub_wire4),
				.almost_full (sub_wire5));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: AlmostEmpty NUMERIC "1"
// Retrieval info: PRIVATE: AlmostEmptyThr NUMERIC "511"
// Retrieval info: PRIVATE: AlmostFull NUMERIC "1"
// Retrieval info: PRIVATE: AlmostFullThr NUMERIC "767"
// Retrieval info: PRIVATE: CLOCKS_ARE_SYNCHRONIZED NUMERIC "0"
// Retrieval info: PRIVATE: Clock NUMERIC "0"
// Retrieval info: PRIVATE: Depth NUMERIC "1024"
// Retrieval info: PRIVATE: Empty NUMERIC "1"
// Retrieval info: PRIVATE: Full NUMERIC "1"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone II"
// Retrieval info: PRIVATE: LE_BasedFIFO NUMERIC "0"
// Retrieval info: PRIVATE: LegacyRREQ NUMERIC "1"
// Retrieval info: PRIVATE: MAX_DEPTH_BY_9 NUMERIC "0"
// Retrieval info: PRIVATE: OVERFLOW_CHECKING NUMERIC "0"
// Retrieval info: PRIVATE: Optimize NUMERIC "0"
// Retrieval info: PRIVATE: RAM_BLOCK_TYPE NUMERIC "0"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: UNDERFLOW_CHECKING NUMERIC "0"
// Retrieval info: PRIVATE: UsedW NUMERIC "1"
// Retrieval info: PRIVATE: Width NUMERIC "16"
// Retrieval info: PRIVATE: dc_aclr NUMERIC "0"
// Retrieval info: PRIVATE: diff_widths NUMERIC "0"
// Retrieval info: PRIVATE: msb_usedw NUMERIC "0"
// Retrieval info: PRIVATE: output_width NUMERIC "16"
// Retrieval info: PRIVATE: rsEmpty NUMERIC "1"
// Retrieval info: PRIVATE: rsFull NUMERIC "0"
// Retrieval info: PRIVATE: rsUsedW NUMERIC "0"
// Retrieval info: PRIVATE: sc_aclr NUMERIC "1"
// Retrieval info: PRIVATE: sc_sclr NUMERIC "0"
// Retrieval info: PRIVATE: wsEmpty NUMERIC "0"
// Retrieval info: PRIVATE: wsFull NUMERIC "1"
// Retrieval info: PRIVATE: wsUsedW NUMERIC "0"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: ADD_RAM_OUTPUT_REGISTER STRING "OFF"
// Retrieval info: CONSTANT: ALMOST_EMPTY_VALUE NUMERIC "511"
// Retrieval info: CONSTANT: ALMOST_FULL_VALUE NUMERIC "767"
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone II"
// Retrieval info: CONSTANT: LPM_NUMWORDS NUMERIC "1024"
// Retrieval info: CONSTANT: LPM_SHOWAHEAD STRING "OFF"
// Retrieval info: CONSTANT: LPM_TYPE STRING "scfifo"
// Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "16"
// Retrieval info: CONSTANT: LPM_WIDTHU NUMERIC "10"
// Retrieval info: CONSTANT: OVERFLOW_CHECKING STRING "ON"
// Retrieval info: CONSTANT: UNDERFLOW_CHECKING STRING "ON"
// Retrieval info: CONSTANT: USE_EAB STRING "ON"
// Retrieval info: USED_PORT: aclr 0 0 0 0 INPUT NODEFVAL "aclr"
// Retrieval info: USED_PORT: almost_empty 0 0 0 0 OUTPUT NODEFVAL "almost_empty"
// Retrieval info: USED_PORT: almost_full 0 0 0 0 OUTPUT NODEFVAL "almost_full"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT NODEFVAL "clock"
// Retrieval info: USED_PORT: data 0 0 16 0 INPUT NODEFVAL "data[15..0]"
// Retrieval info: USED_PORT: empty 0 0 0 0 OUTPUT NODEFVAL "empty"
// Retrieval info: USED_PORT: full 0 0 0 0 OUTPUT NODEFVAL "full"
// Retrieval info: USED_PORT: q 0 0 16 0 OUTPUT NODEFVAL "q[15..0]"
// Retrieval info: USED_PORT: rdreq 0 0 0 0 INPUT NODEFVAL "rdreq"
// Retrieval info: USED_PORT: usedw 0 0 10 0 OUTPUT NODEFVAL "usedw[9..0]"
// Retrieval info: USED_PORT: wrreq 0 0 0 0 INPUT NODEFVAL "wrreq"
// Retrieval info: CONNECT: @aclr 0 0 0 0 aclr 0 0 0 0
// Retrieval info: CONNECT: @clock 0 0 0 0 clock 0 0 0 0
// Retrieval info: CONNECT: @data 0 0 16 0 data 0 0 16 0
// Retrieval info: CONNECT: @rdreq 0 0 0 0 rdreq 0 0 0 0
// Retrieval info: CONNECT: @wrreq 0 0 0 0 wrreq 0 0 0 0
// Retrieval info: CONNECT: almost_empty 0 0 0 0 @almost_empty 0 0 0 0
// Retrieval info: CONNECT: almost_full 0 0 0 0 @almost_full 0 0 0 0
// Retrieval info: CONNECT: empty 0 0 0 0 @empty 0 0 0 0
// Retrieval info: CONNECT: full 0 0 0 0 @full 0 0 0 0
// Retrieval info: CONNECT: q 0 0 16 0 @q 0 0 16 0
// Retrieval info: CONNECT: usedw 0 0 10 0 @usedw 0 0 10 0
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo1024.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo1024.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo1024.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo1024.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo1024_inst.vhd FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo1024_syn.v TRUE
// Retrieval info: LIB_FILE: altera_mf
